name: Distributed Verification

on:
  push:

env:
  CARGO_TERM_COLOR: always
  RUST_LOG: info
  UNSTABLE_ARGS: -Z function-contracts -Z mem-predicates -Z float-lib -Z c-ffi -Z loop-contracts
  KANI_COMMIT: 228c5a5f078ff7b46d67724ed8362865266d709f

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: git clone os-checker/distributed-verification
        run: |
          cd && git clone --recursive https://github.com/os-checker/distributed-verification.git
          cd distributed-verification/kani

      - name: install kani
        run: |
          cd ~/distributed-verification/kani
          git checkout ${{ env.KANI_COMMIT }}
          ./scripts/setup/ubuntu/install_deps.sh
          cargo build-dev -- --release
          # add kani to PATH
          echo PATH=$(pwd)/scripts:$PATH >> $GITHUB_ENV
          # distributed-verification needs to know kani dir
          echo KANI_DIR=$(pwd)/target/kani >> $GITHUB_ENV
          # no_core lib
          echo NO_CORE_DIR=$(pwd)/target/kani/no_core/lib/ >> $GITHUB_ENV

      - name: install distributed-verification
        run: |
          kani --version
          cd ~/distributed-verification
          cargo install --path .
          # override toolchain in verify-rust-std
          cp rust-toolchain.toml ${{ github.workspace }}/rust-toolchain.toml

      - name: analyze libcore
        run: |
          export LD_LIBRARY_PATH=$(rustc --print sysroot)/lib
          cd library/core
          distributed-verification -- --edition 2024 src/lib.rs -L ${{ env.NO_CORE_DIR }} --extern kani_core

      # - name: Install kani
      #   run: |
      #     cd && git clone --recursive https://github.com/model-checking/kani.git
      #     cd kani
      #     git checkout ${{ env.KANI_COMMIT }}
      #     ./scripts/setup/ubuntu/install_deps.sh
      #     cargo build-dev -- --release
      #     echo PATH=$(pwd)/scripts:$PATH >> $GITHUB_ENV
      #
      # - name: Analyze libcore
      #   run: |
      #     kani list -Zlist ${{ env.UNSTABLE_ARGS }} --std ./library

      # - name: Run kani list
      #   run: bash -x scripts/run-kani.sh --run list
